// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpc

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyBandwidthPackageSpecCommon = "ModifyBandwidthPackageSpec"

// ModifyBandwidthPackageSpecCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyBandwidthPackageSpecCommon operation. The "output" return
// value will be populated with the ModifyBandwidthPackageSpecCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyBandwidthPackageSpecCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyBandwidthPackageSpecCommon Send returns without error.
//
// See ModifyBandwidthPackageSpecCommon for more information on using the ModifyBandwidthPackageSpecCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyBandwidthPackageSpecCommonRequest method.
//    req, resp := client.ModifyBandwidthPackageSpecCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) ModifyBandwidthPackageSpecCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyBandwidthPackageSpecCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyBandwidthPackageSpecCommon API operation for VPC.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPC's
// API operation ModifyBandwidthPackageSpecCommon for usage and error information.
func (c *VPC) ModifyBandwidthPackageSpecCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyBandwidthPackageSpecCommonRequest(input)
	return out, req.Send()
}

// ModifyBandwidthPackageSpecCommonWithContext is the same as ModifyBandwidthPackageSpecCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyBandwidthPackageSpecCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) ModifyBandwidthPackageSpecCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyBandwidthPackageSpecCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyBandwidthPackageSpec = "ModifyBandwidthPackageSpec"

// ModifyBandwidthPackageSpecRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyBandwidthPackageSpec operation. The "output" return
// value will be populated with the ModifyBandwidthPackageSpecCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyBandwidthPackageSpecCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyBandwidthPackageSpecCommon Send returns without error.
//
// See ModifyBandwidthPackageSpec for more information on using the ModifyBandwidthPackageSpec
// API call, and error handling.
//
//    // Example sending a request using the ModifyBandwidthPackageSpecRequest method.
//    req, resp := client.ModifyBandwidthPackageSpecRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) ModifyBandwidthPackageSpecRequest(input *ModifyBandwidthPackageSpecInput) (req *request.Request, output *ModifyBandwidthPackageSpecOutput) {
	op := &request.Operation{
		Name:       opModifyBandwidthPackageSpec,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyBandwidthPackageSpecInput{}
	}

	output = &ModifyBandwidthPackageSpecOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyBandwidthPackageSpec API operation for VPC.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPC's
// API operation ModifyBandwidthPackageSpec for usage and error information.
func (c *VPC) ModifyBandwidthPackageSpec(input *ModifyBandwidthPackageSpecInput) (*ModifyBandwidthPackageSpecOutput, error) {
	req, out := c.ModifyBandwidthPackageSpecRequest(input)
	return out, req.Send()
}

// ModifyBandwidthPackageSpecWithContext is the same as ModifyBandwidthPackageSpec with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyBandwidthPackageSpec for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) ModifyBandwidthPackageSpecWithContext(ctx volcengine.Context, input *ModifyBandwidthPackageSpecInput, opts ...request.Option) (*ModifyBandwidthPackageSpecOutput, error) {
	req, out := c.ModifyBandwidthPackageSpecRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyBandwidthPackageSpecInput struct {
	_ struct{} `type:"structure"`

	// Bandwidth is a required field
	Bandwidth *int64 `min:"2" max:"5000" type:"integer" required:"true"`

	// BandwidthPackageId is a required field
	BandwidthPackageId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ModifyBandwidthPackageSpecInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyBandwidthPackageSpecInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyBandwidthPackageSpecInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyBandwidthPackageSpecInput"}
	if s.Bandwidth == nil {
		invalidParams.Add(request.NewErrParamRequired("Bandwidth"))
	}
	if s.Bandwidth != nil && *s.Bandwidth < 2 {
		invalidParams.Add(request.NewErrParamMinValue("Bandwidth", 2))
	}
	if s.Bandwidth != nil && *s.Bandwidth > 5000 {
		invalidParams.Add(request.NewErrParamMaxValue("Bandwidth", 5000))
	}
	if s.BandwidthPackageId == nil {
		invalidParams.Add(request.NewErrParamRequired("BandwidthPackageId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBandwidth sets the Bandwidth field's value.
func (s *ModifyBandwidthPackageSpecInput) SetBandwidth(v int64) *ModifyBandwidthPackageSpecInput {
	s.Bandwidth = &v
	return s
}

// SetBandwidthPackageId sets the BandwidthPackageId field's value.
func (s *ModifyBandwidthPackageSpecInput) SetBandwidthPackageId(v string) *ModifyBandwidthPackageSpecInput {
	s.BandwidthPackageId = &v
	return s
}

type ModifyBandwidthPackageSpecOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyBandwidthPackageSpecOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyBandwidthPackageSpecOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyBandwidthPackageSpecOutput) SetRequestId(v string) *ModifyBandwidthPackageSpecOutput {
	s.RequestId = &v
	return s
}
